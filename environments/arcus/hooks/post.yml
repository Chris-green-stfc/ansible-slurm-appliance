- hosts: login:!builder # won't have a slurm control daemon when in build
  become: no
  gather_facts: false
  tasks:
    - name: Check slurm up after direct deploy
      import_tasks: check_slurm.yml

- hosts: control
  become: yes
  gather_facts: false
  name: Fudge in dependencies on appliances_state_dir
  # NB: mysql is handled by its own unit file
  vars:
    persistent_services:
      - opendistro
      - grafana-server
      - slurmdbd # openhpc
      - slurmctld # openhpc
      - prometheus
  tasks:
    - name: Make directory for unit dropins
      file:
        path: "/etc/systemd/system/{{ item }}.service.d/"
        state: directory
      loop: "{{ persistent_services }}"
    - name: Add dropins for unit files
      ansible.builtin.copy:
        content: |
          [Unit]
          RequiresMountsFor={{ appliances_state_dir }}
        dest: "/etc/systemd/system/{{ item }}.service.d/appliance_state.conf"
      loop: "{{ persistent_services }}"
      register: persistent_services_dropins
    - name: Reload unit definitions
      ansible.builtin.shell:
        cmd: systemctl daemon-reload
      when: persistent_services_dropins.changed
    - name: Reload units
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
      loop: "{{ persistent_services }}"
      when:
        - persistent_services_dropins.changed
        - "'builder' not in group_names"

- hosts: control
  become: yes
  gather_facts: false
  tasks:
    - name: Write CI-generated inventory and secrets for debugging
      ansible.builtin.copy:
        dest: /etc/ci-config/
        src: "{{ item }}"
        directory_mode: 0400
        mode: 0400
        owner: root
        group: root
      no_log: true
      loop:
        - "{{ lookup('env', 'APPLIANCES_ENVIRONMENT_ROOT') }}/inventory/hosts"
        - "{{ lookup('env', 'APPLIANCES_ENVIRONMENT_ROOT') }}/inventory/group_vars/all/secrets.yml"
        - "{{ lookup('env', 'APPLIANCES_ENVIRONMENT_ROOT') }}/inventory/group_vars/basic_users/defaults.yml"
