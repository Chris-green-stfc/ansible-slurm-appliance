# Based on https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/installing_identity_management/preparing-the-system-for-ipa-server-installation_installing-identity-management#host-name-and-dns-requirements-for-ipa_preparing-the-system-for-ipa-server-installation

- name: Get hostname as reported by command
  command: hostname
  register: _freeipa_validate_hostname
  changed_when: false

- name: Ensure hostname is fully-qualified
  # see section 2.7 of redhat guide to installing identity management
  assert:
    that: _freeipa_validate_hostname.stdout | split('.') | length >= 3
    fail_msg: "freeipa_server hostname '{{ _freeipa_validate_hostname.stdout }}' is not fully-qualified (a.b.c)"

- name: Check for virtual servers in httpd configuration of freeipa_server
  # e.g. fatimage with OOD config; community.general.ipa_host fails with "401 Unauthorized: No session cookie found"
  # https://lists.fedoraproject.org/archives/list/freeipa-users@lists.fedorahosted.org/message/7RH7XDFR35KDPYJ7AQCQI2H2EOWIZCWA/
  find:
    path: /etc/httpd/conf.d/
    contains: '<VirtualHost'
    read_whole_file: false
    pattern: '*.conf'
  register: _find_httpd_conf

- name: Assert no other name-based virtual servers on freeipa_server
  assert:
    that: item.path == '/etc/httpd/conf.d/ssl.conf' # this one is OK
    fail_msg: "freeipa_server host must not have other virtual servers defined: see {{ item.path }}"
  loop: "{{ _find_httpd_conf.files }}"

- name: Install freeipa server packages
  dnf:
    name: '@idm:DL1/dns'
    state: present

- name: Install ipa server
# TODO: make no-ui-redirect and dns configurable??
# TODO: set file mask as per docs? Would be hard to cope with failures. Doesn't appear to be necessary actually.
  command:
    cmd: >
      ipa-server-install
        --realm {{ freeipa_realm | quote }}
        --domain {{ freeipa_domain | lower | quote }}
        --ds-password {{ freeipa_ds_password | quote }}
        --admin-password {{ freeipa_admin_password | quote }} 
        --ip-address={{ freeipa_server_ip }}
        {% if freeipa_setup_dns | bool %}--setup-dns{% endif %}
        --auto-reverse
        --auto-forwarders
        --no-dnssec-validation
        --no-ntp
        --unattended
        --no-ui-redirect
    # TODO: add no_log here as password exposed
        
  register: _ipa_server_install
  changed_when: _ipa_server_install.rc == 0
  failed_when: >
    (_ipa_server_install.rc != 0) and
    ('IPA server is already configured' not in _ipa_server_install.stderr)

- name: Disable redirects to hard-coded domain
  # see https://pagure.io/freeipa/issue/7479
  replace: path=/etc/httpd/conf.d/ipa-rewrite.conf regexp='{{ item.regexp }}' replace='{{ item.replace }}'
  with_items:
    # RewriteRule ^/$ https://${FQDN}/ipa/ui [L,NC,R=301] - irrelevant if using --no-ui-redirect
    - regexp: '^(RewriteRule \^/\$) (https://.*)(/ipa/ui.*)$'
      replace: '\1 \3'
    # RewriteRule ^/ipa/(.*) - occurs twice
    - regexp: '^(RewriteRule \^\/ipa\/\(.*)$' 
      replace: '#\1'
    - regexp: '^(RewriteCond .*)$'
      replace: '#\1'
    # RewriteRule ^/(.*)          https://${FQDN}/$1 [L,R=301]
    - regexp: '^(RewriteRule \^/\(\.\*\).*)$'
      replace: '#\1'
  register: _replace_freeipa_rewrites

- name: Deactivate HTTP RefererError
  replace:
    path: '/usr/lib/python3.6/site-packages/ipaserver/rpcserver.py'
    regexp: '{{ item }}'
    replace: '\1pass  # \2'
  with_items:
    - "^([ ]*)(return self.marshal\\(result, RefererError\\(referer)"
  register: _replace_rpcserver_referrer

- name: Reload apache configuration
  service:
    name: httpd
    state: reloaded
  when: _replace_freeipa_rewrites.changed or _replace_rpcserver_referrer.changed
