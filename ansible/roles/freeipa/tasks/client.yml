# based on https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/installing_identity_management/assembly_installing-an-idm-client_installing-identity-management

- name: Install FreeIPA client package
  dnf:
    name: ipa-client

- name: Set IPA server as nameserver
  copy:
    dest: /etc/resolv.conf
    content: |
      ; Created by slurm appliance/ansible/roles/freeipa/tasks/client.yml
      ;

      nameserver {{ freeipa_server_ip }}
      nameserver 131.111.12.20
    owner: root
    group: root
    mode: u=rw,og=r
  when: freeipa_setup_dns | bool

# TODO: FIXME:
# - name: Check for keytab from previous enrolement
#   stat:
#     path: "{{ _freeipa_keytab_backup_path }}krb5.keytab"
#   register: _stat_backup_keytab

# - name: Renrole with FreeIPA using backed-up keytab
#   # reenrolment requires --force-join and --password, or --keytab
#   # renrolement means:
#   #  1. A new host certificate is issued
#   #  2. The old host certificate is revoked
#   #  3. New SSH keys are generated
#   #  4. ipaUniqueID is preserved
#   # and ALSO that the keytab is changed!
#   command:
#     cmd: >
#       ipa-client-install
#         --unattended
#         --mkhomedir
#         --enable-dns-updates
#         --keytab {{ _freeipa_keytab_backup_path }}krb5.keytab
#   when: _stat_backup_keytab.stat.exists
#   register: ipa_client_install_keytab
#   changed_when: ipa_client_install_keytab.rc == 0
#   failed_when: >
#     ipa_client_install_keytab.rc !=0 and
#     'IPA client is already configured' not in ipa_client_install_keytab.stderr
#   # TODO: find a way to NOT reenrole, if necessary??

- name: Enrole with FreeIPA using random password
  # Note --password is overloaded - it's bulkpassword unless --principal or --force-join is used in which case it's admin password
  command:
    cmd: >
      ipa-client-install
        --unattended
        --mkhomedir
        --enable-dns-updates
        --password '{{ freeipa_host_password }}'
  register: ipa_client_install_password
  changed_when: ipa_client_install_password.rc == 0
  failed_when: >
    ipa_client_install_password.rc != 0 and
    'IPA client is already configured' not in ipa_client_install_password.stderr

- name: Backup keytab
  copy:
    remote_src: true
    src: /etc/krb5.keytab
    dest: "{{ _freeipa_keytab_backup_path }}"
  when: appliances_state_dir is defined
