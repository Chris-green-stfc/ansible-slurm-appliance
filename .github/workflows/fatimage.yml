
name: Build fat image
on:
  workflow_dispatch:
jobs:
  openstack:
    name: openstack-ci-${{ matrix.cloud }}
    strategy:
      matrix:
        cloud:
          - "arcus"   # Arcus OpenStack in rcp-cloud-portal-demo project, with RoCE
      fail-fast: false # as want clouds to continue independently
    concurrency: ${{ github.ref }} # to branch/PR
    runs-on: ubuntu-20.04
    env:
      ANSIBLE_FORCE_COLOR: True
      OS_CLOUD: openstack
      TF_VAR_cluster_name: ci${{ github.run_id }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup ssh
        run: |
          set -x
          mkdir ~/.ssh
          echo "${${{ matrix.cloud }}_SSH_KEY}" > ~/.ssh/id_rsa
          chmod 0600 ~/.ssh/id_rsa
        env:
          arcus_SSH_KEY: ${{ secrets.ARCUS_SSH_KEY }}

      - name: Add bastion's ssh key to known_hosts
        run: cat environments/${{ matrix.cloud }}/bastion_fingerprint >> ~/.ssh/known_hosts
        shell: bash
      
      - name: Install ansible etc
        run: dev/setup-env.sh
      
      - name: Write clouds.yaml
        run: |
          mkdir -p ~/.config/openstack/
          echo "${${{ matrix.cloud }}_CLOUDS_YAML}" > ~/.config/openstack/clouds.yaml
        shell: bash
        env:
          arcus_CLOUDS_YAML: ${{ secrets.ARCUS_CLOUDS_YAML }}
            
      - name: Setup environment
        run: |
          . venv/bin/activate
          . environments/${{ matrix.cloud }}/activate
        
      - name: Build fat image with packer
        id: packer_build
        run: |
          . venv/bin/activate
          . environments/${{ matrix.cloud }}/activate
          cd packer/
          packer init
          PACKER_LOG=1 packer build -only openstack.fatimage -on-error=ask -var-file=$PKR_VAR_environment_root/builder.pkrvars.hcl openstack.pkr.hcl

      - name: Get created image name from manifest
        id: manifest
        run: |
          . venv/bin/activate
          IMAGE_ID=$(jq --raw-output '.builds[-1].artifact_id' packer-manifest.json)
          while ! openstack image show -f value -c name $IMAGE_ID; do
            sleep 30
          done
          IMAGE_NAME=$(openstack image show -f value -c name $IMAGE_ID)
          echo "::set-output name=IMAGE_ID::$IMAGE_ID"
          echo "::set-output name=IMAGE_NAME::$IMAGE_NAME"
        env:
          OS_CLOUD: openstack
